openapi: 3.0.0
info:
  title: User API
  description: API para la gestión de usuarios.
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Servidor local
paths:
  /users:
    get:
      summary: Obtener todos los usuarios
      description: Retorna una lista de todos los usuarios registrados.
      responses:
        200:
          description: Lista de usuarios obtenida correctamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        500:
          description: Error interno del servidor.
    post:
      summary: Crear un nuevo usuario
      description: Crea un nuevo usuario con los datos proporcionados.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreate"
      responses:
        200:
          description: Usuario creado correctamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        400:
          description: Error de validación en los datos proporcionados.
        500:
          description: Error interno del servidor.
  /users/{uid}:
    put:
      summary: Actualizar un usuario existente
      description: Actualiza los datos de un usuario por su `uid`.
      parameters:
        - name: uid
          in: path
          required: true
          description: UUID del usuario a actualizar.
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdate"
      responses:
        200:
          description: Usuario actualizado correctamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        400:
          description: Error de validación en los datos proporcionados o en el `uid`.
        404:
          description: Usuario no encontrado.
        500:
          description: Error interno del servidor.

components:
  schemas:
    User:
      type: object
      properties:
        uid:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        username:
          type: string
          example: "mauriciomoraga"
        email:
          type: string
          format: email
          example: "example@mail.com"
        password:
          type: string
          example: "hashedpassword123"
    UserCreate:
      type: object
      required:
        - email
        - password
      properties:
        username:
          type: string
          example: "mauriciomoraga"
        email:
          type: string
          format: email
          example: "example@mail.com"
        password:
          type: string
          minLength: 6
          example: "securepassword"
    UserUpdate:
      type: object
      properties:
        username:
          type: string
          example: "updatedusername"
        email:
          type: string
          format: email
          example: "updatedemail@mail.com"
        password:
          type: string
          minLength: 6
          example: "newsecurepassword"
